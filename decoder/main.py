"""
Main script to decode WINC1500 SPI traffic.
"""
import argparse
import csv
import os
import sys

# Add the decoder directory to the Python path
sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))

from gop_decoder import decode_full_stream

def load_data_from_csv(filepath):
    """Loads MOSI and MISO data from a CSV file."""
    mosi, miso = [], []
    with open(filepath, 'r') as f:
        reader = csv.DictReader(f)
        for row in reader:
            try:
                mosi.append(int(row['MOSI'], 16))
                miso.append(int(row['MISO'], 16))
            except (ValueError, KeyError):
                print(f"Warning: Skipping invalid row in CSV: {row}")
    return mosi, miso

def get_fallback_data():
    """Returns the hardcoded fallback data."""
    mosi = [202, 0, 232, 36, 188, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 232, 36, 0, 0, 0, 82, 92, 0, 0, 202, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 202, 0, 232, 36, 0, 0, 0, 0, 0, 0, 0, 201, 0, 232, 36, 0, 0, 0, 82, 0, 0, 202, 0, 16, 20, 0, 0, 0, 0, 0, 0, 0, 202, 2, 7, 188, 0, 0, 0, 0, 0, 0, 0, 202, 12, 0, 12, 0, 0, 0, 0, 0, 0, 0, 201, 0, 16, 140, 19, 74, 19, 74, 0, 0, 202, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 202, 0, 19, 244, 0, 0, 0, 0, 0, 0, 0, 201, 0, 20, 160, 0, 0, 1, 2, 0, 0, 202, 0, 20, 160, 0, 0, 0, 0, 0, 0, 0, 201, 12, 0, 12, 239, 82, 47, 97, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 202, 0, 16, 140, 0, 0, 0, 0, 0, 0, 0, 201, 0, 16, 140, 0, 0, 0, 0, 0, 0, 202, 0, 20, 8, 0, 0, 0]
    miso = [0, 0, 0, 0, 0, 202, 0, 243, 46, 0, 0, 0, 17, 212, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 202, 0, 243, 160, 3, 16, 0, 0, 0, 0, 0, 202, 0, 243, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 202, 0, 243, 45, 8, 124, 128, 0, 0, 0, 0, 202, 0, 243, 0, 63, 0, 0, 0, 0, 0, 0, 202, 0, 243, 158, 208, 173, 16, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 202, 0, 243, 160, 3, 16, 0, 0, 0, 0, 0, 202, 0, 243, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 202, 0, 243, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 74, 19, 74, 19, 0, 0, 0, 0, 202, 0, 243, 54, 38, 83, 2, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 202, 0, 243]
    return mosi, miso

def main():
    parser = argparse.ArgumentParser(description="Decode WINC1500 SPI traffic.")
    parser.add_argument("-f", "--file", help="Path to a CSV file with MOSI and MISO data.")
    args = parser.parse_args()

    if args.file:
        print(f"Loading data from {args.file}...")
        mosi, miso = load_data_from_csv(args.file)
    else:
        print("No file provided, using hardcoded fallback data.")
        mosi, miso = get_fallback_data()

    if not mosi or not miso:
        print("No data to decode.")
        return

    decode_full_stream(mosi, miso)

if __name__ == "__main__":
    main()
